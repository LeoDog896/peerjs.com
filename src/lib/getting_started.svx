

PeerJS simplifies peer-to-peer data, video, and audio calls.


This guide will show you the basic concepts of the PeerJS API.

## Setup

### 1. Include the Javascript client.

Add the PeerJS client library to your webpage.

```html
<script src="https://unpkg.com/peerjs@1.3.2/dist/peerjs.min.js"></script>
```

If you prefer, you can host it yourself: [peerjs.min.js](https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js), or [fork us on Github](https://github.com/peers/peerjs).

### 2. Create the Peer object

The peer object is where we create and receive connections.

```js
var peer = new Peer();
```

PeerJS uses PeerServer for session metadata and candidate signaling.
You can also [run your own PeerServer](https://github.com/peers/peerjs-server) if you don't like the cloud.

We're now ready to start making connections!

### Usage

Every Peer object is assigned a random, unique ID when it's created.

```js
peer.on('open', function(id) {
	console.log('My peer ID is: ' + id);
});
```

When we want to connect to another peer, we'll need to know their peer id. You're in charge of communicating the peer IDs between users of your site. Optionally, you can pass in your own IDs to the Peer constructor .

Read the Peer API reference for complete information on its options, methods, events, and error handling.